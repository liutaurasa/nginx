server {
    listen 443 ssl; # managed by Certbot
    server_name     {{ ([_vhost['name']] + _vhost['aliases'] | default([]) ) | join(' ') }};

{% for _target in _vhost['proxy'] %}
    location {{ _target['location'] | default('/') }} {
        proxy_pass_header       Authorization;
        proxy_pass              http://{{ _target['target_server'] | default('127.0.0.1') }}:{{ _target['target_port'] | default('80') }};
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        SSL_PROTOCOL $ssl_protocol;
        proxy_http_version      1.1;
        proxy_set_header        Connection “”;
        proxy_buffering         off;
        client_max_body_size    0;
        proxy_read_timeout      300;
        proxy_connect_timeout   300;
        proxy_send_timeout      300;
        proxy_redirect          off;
        resolver                127.0.0.1;
{%  if _target['add_headers'] is defined %}
{%    for _header in _target['add_headers'] %}
        add_header              {{ _header['name'] }} {{ _header['value'] }};
{%    endfor %}
{%  endif %}
    }
{% endfor %}

    location /.well-known {
        alias /var/www/{{ _vhost['name'] }}/.well-known;
    }

    ssl_certificate {{ certbot_certs_installed[_vhost['name']]['certificate_path'] | default('<< DRY RUN >>') }}; # managed by Certbot
    ssl_certificate_key {{ certbot_certs_installed[_vhost['name']]['private_key_path'] | default('<< DRY RUN >>') }}; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    listen          80;
    server_name     {{ ([_vhost['name']] + _vhost['aliases'] | default([]) ) | join(' ') }};

    if ($host ~ ({{ ([_vhost['name']] + _vhost['aliases'] | default([]) ) | join('|') }})) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location /.well-known {
        alias /var/www/{{ _vhost['name'] }}/.well-known;
    }

    return 404;
}
